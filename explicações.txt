// Utlizando o operador igual para uma atruição de valor de uma string para uma varável
// = Operador de atribuição
// Comando var declara variáveis no javascript
// Comando let declara variáveis definindo o escopo de atuação
// Comando const declara constante, uma vez definido o valor nela nunca pode mudar


// As variáveis podem guardar varios tipos de dados diferentes
// Comando number números interos e decimais no Javascript 

// arrays Varáveis com mesmo nome e tipo armazenando mais de um valor.(séries de variável em uma mesma variável).
// typeOf tipo de dado de variável

//No JavaScript as variáveis são fracamente tipdas
//Funções de Conversão parseInt, paseFloat

Operadores de comparação
// == compara o valor de duas expressões
// === compara o valor e o tipo de dados
// !== compara se o valor e tipo são diferentes
// != compara se os valores são diferentes

// if condição de instrução
// uma condição do if que for verdadeira anula todas as de mais condições if ou else

// switch estrutur de controle com opções pré-definidas
// case condição (então) instruções; breack;
// utiliza-se sempre o breack para interromper um bloco

// for (valor inicial; valor final; valor incrementado)
// continue similar ao brack, porem ignora e vai par o proximo
// callback é uma funçaõ de retorno como parametro após uma ação
// template string permite que pule linha em uma string

//funcoes são trechos de códigos que podem ser reutilizados (executa alguma coisa e retorna um valor), é ulizada para realizar calculos, conversão e validação
//classes agrupa atributos e metodos no mesmo lugar
//return ecerra a função e retorna a um valor
//argumentos ou Args permitem acessar parâmetros de uma função

//Javascript é uma linguagem reativa. Ela depende do comportamento do usuario para interagir com o código.

//argumentos ou parâmetros são informações que as funções precisam
// argumentos ou arg permitem acessar parametros de uma função
//Arrow Function é um novo recurso para função
//DOM (document object model) a estrutura como o html é formado
//Eventos são ações realizadas na aplicação que dispara rotinas
//window manipula a aplicação
//TimeStamp é a quantidade de segundos desde 01/01/1970
//Array são variáveis indexadas. A posição do array começa sempre com zero
//forEach laço de percorrer array, recebe uma função anônima